No.	Function/Use case	Controller	Method	TC	Objective	Predicate	Input	Expected Output	Coverage
2	Assign exam to users	ExamUserServiceImpl	create()		Ensure ExamUser is created correctly for each User	userSet.size() > 0	exam.duration = 30, userSet = [User1, User2]	2 ExamUser objects saved with remainingTime = 1800	
					Ensure function handles empty userSet	userSet.size() == 0	exam.duration = 30, userSet = []	No ExamUser created	
	Get exams by username		getExamListByUsername()		Ensure only non-canceled exams are returned	exam.canceled == false	username = "john"	List of non-canceled exams	
	Find by exam & user		findByExamAndUser()		Ensure it finds correct ExamUser by examId and username	Always returns 1 record	examId = 1L, username = "john"	Matching ExamUser	
	Update ExamUser		update()		Ensure updated ExamUser is persisted	(no predicates present)	Modified ExamUser with totalPoint = 10.0	Saved via repo	
	Find ExamUser by ID		findExamUserById()		Ensure method returns Optional if ID exists	id != null	id = 10L (exist in DB)	Optional.of(ExamUser)	
					Ensure Optional.empty is returned when ID not found	id does not exist in DB	id = 999L	Optional.empty()	
	Get completed exams		getCompleteExams()		Return ExamUser with totalPoint > -1	totalPoint > -1.0	courseId = 2L, username = "john"	List of completed ExamUser	
	Find by examId		findAllByExam_Id()		Return all ExamUser for examId	(no predicates present)	examId = 1L	List<ExamUser>	
	Find finished users		findExamUsersByIsFinishedIsTrueAndExam_Id()		Return only finished users for an exam	isFinished == true	examId = 1L	List of finished ExamUser	
