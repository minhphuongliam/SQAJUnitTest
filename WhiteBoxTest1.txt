Save new Exam	ExamServiceImpl	saveExam()	L1.1	Ensure system creates new record if exam.id == null	(no predicates present)	An Instance of class Exam with out id	An object of class Entity with all attribute including id	Decision - True
Update existing Exam			L1.2	Ensure system updates if exam.id != null	(no predicates present)	An instance of class Exam with new attribute's data	An object of class Entity with new attribute's data	Decision - False
Find all exams with pagination		findAll()	L1.3	Ensure pagination works correctly	(no predicates present)	Pageable page = 0, size = 10	Page<Exam> of Exams	
Cancel Exam		cancelExam()	L1.4	Ensure exam is canceled via custom query call	(no predicates present)	id = 1L	Repository method executed	
Get all Exams		getAll()	L1.5	Ensure list of all exams is returned	(no predicates present)	null	List<Exam>	
			L1.6	Ensure exam is retrieved if exists	(no predicates present)	id = 10 (In DB)	Optional.of(Exam)	Branch
Get Exam by ID		getExamById()	L1.7	Handle exam not found	(no predicates present)	id = 13 (Not in DB)	Optional.empty()	Branch
Get Exams by username		findAllByCreatedBy_Username()	L1.8	Ensure correct paging & filtering by username	(no predicates present)	username = "teacher1"	Page<Exam> of Exams created by user	
Process TF choice		getChoiceList()	L1.9	Ensure TF type handles correct choice text match	"switch(TF) && 
choice.getChoiceText().equals(choiceText) == true"	type=TF, choiceText="True", choiceService returns same	isRealCorrect = 1, isSelectedCorrected = true	Decision TF – true
Process TF choice fail			L1.10	Ensure TF type handles incorrect choice text	"switch(TF) && 
choice.getChoiceText().equals(choiceText) == false"	type=TF, choiceText="False", choiceService returns different	isRealCorrect = 0, isSelectedCorrected = false	Decision TF – false
Process MC correct			L1.11	Ensure MC type correctly identifies a correct answer	"switch(MC) && 
(choice.getIsCorrected() == isRealCorrect && isRealCorrect == 1) == true"	type=MC, isCorrected=1, choiceService returns 1	isSelectedCorrected = true	Decision MC – true
Process MC incorrect			L1.12	Ensure MC type handles incorrect answer	"switch(MC) && 
choice.getIsCorrected() == isRealCorrect && isRealCorrect == 1 == false"	type=MC, isCorrected=0, choiceService returns 1	isSelectedCorrected = false	Decision MC – false
Process MS correct			L1.13	Ensure MS type handles full correct selection	"switch(MS) && 
choice.getIsCorrected() == 0 && isRealCorrect == 1 == false"	type=MS, isCorrected=1, choiceService returns 1	isSelectedCorrected = true	Decision MS – false
Process MS incorrect			L1.14	Ensure MS type handles missing correct answer	"switch(MS) && 
choice.getIsCorrected() == 0 && isRealCorrect == 1 == true"	type=MS, isCorrected=0, choiceService returns 1	isSelectedCorrected = false	Decision MS – true
Invalid Question type			L1.15	Ensure switch-case behaves gracefully for unknown type	switch-case default (not matched)	type=null or not (TF, MC, MS)	Throw exception	Switch default
